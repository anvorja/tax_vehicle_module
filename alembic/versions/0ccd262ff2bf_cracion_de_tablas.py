"""Cracion de tablas

Revision ID: 0ccd262ff2bf
Revises: 
Create Date: 2024-12-08 12:51:32.207074

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0ccd262ff2bf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_type',
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_type_code_active', 'document_type', ['code', 'is_active'], unique=False)
    op.create_index(op.f('ix_document_type_code'), 'document_type', ['code'], unique=True)
    op.create_table('systemconfig',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=False),
    sa.Column('valid_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('valid_until IS NULL OR valid_from < valid_until', name='check_validity_dates'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_system_config_key_active', 'systemconfig', ['key', 'is_active'], unique=False)
    op.create_index(op.f('ix_systemconfig_key'), 'systemconfig', ['key'], unique=True)
    op.create_table('taxperiod',
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('traffic_light_fee', sa.Float(), nullable=False),
    sa.Column('min_penalty_uvt', sa.Integer(), nullable=False),
    sa.Column('uvt_value', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('extension_date', sa.Date(), nullable=True),
    sa.Column('observations', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year', name='uq_tax_period_year')
    )
    op.create_index('idx_tax_period_dates', 'taxperiod', ['start_date', 'end_date', 'is_active'], unique=False)
    op.create_index(op.f('ix_taxperiod_year'), 'taxperiod', ['year'], unique=False)
    op.create_table('taxrate',
    sa.Column('vehicle_type', sa.Enum('PARTICULAR', 'PUBLIC', 'MOTORCYCLE', name='vehicletype'), nullable=False),
    sa.Column('min_value', sa.Float(), nullable=True),
    sa.Column('max_value', sa.Float(), nullable=True),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('tax_period_id', sa.Integer(), nullable=False),
    sa.Column('additional_rate', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tax_period_id'], ['taxperiod.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tax_rate_vehicle_type_year', 'taxrate', ['vehicle_type', 'year', 'is_active'], unique=False)
    op.create_table('user',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superadmin', sa.Boolean(), nullable=False),
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('document_number', sa.String(length=20), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('notification_email', sa.String(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('password_reset_token', sa.String(), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_document', 'user', ['document_type_id', 'document_number'], unique=False)
    op.create_index('idx_user_email_active', 'user', ['email', 'is_active'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('vehicle',
    sa.Column('plate', sa.String(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('vehicle_type', sa.Enum('PARTICULAR', 'PUBLIC', 'MOTORCYCLE', name='vehicletype'), nullable=False),
    sa.Column('commercial_value', sa.Float(), nullable=False),
    sa.Column('is_electric', sa.Boolean(), nullable=False),
    sa.Column('is_hybrid', sa.Boolean(), nullable=False),
    sa.Column('registration_date', sa.Date(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('engine_displacement', sa.Float(), nullable=True),
    sa.Column('tax_rate', sa.Float(), nullable=True),
    sa.Column('tax_year', sa.Integer(), nullable=True),
    sa.Column('discount_type', sa.String(), nullable=True),
    sa.Column('discount_expiry', sa.Date(), nullable=True),
    sa.Column('is_new', sa.Boolean(), nullable=False),
    sa.Column('import_declaration', sa.String(), nullable=True),
    sa.Column('last_payment_date', sa.DateTime(), nullable=True),
    sa.Column('next_payment_due', sa.DateTime(), nullable=True),
    sa.Column('has_pending_payments', sa.Boolean(), nullable=False),
    sa.Column('current_tax_status', sa.Enum('UP_TO_DATE', 'PENDING', 'OVERDUE', 'EXEMPT', name='taxstatus'), nullable=False),
    sa.Column('current_appraisal', sa.Float(), nullable=False),
    sa.Column('appraisal_year', sa.Integer(), nullable=False),
    sa.Column('line', sa.String(), nullable=True),
    sa.Column('previous_appraisal', sa.Float(), nullable=True),
    sa.Column('last_tax_calculation', sa.DateTime(), nullable=True),
    sa.Column('requires_traffic_light_fee', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_vehicle_plate_status', 'vehicle', ['plate', 'current_tax_status'], unique=False)
    op.create_index('idx_vehicle_type_city', 'vehicle', ['vehicle_type', 'city'], unique=False)
    op.create_index(op.f('ix_vehicle_plate'), 'vehicle', ['plate'], unique=True)
    op.create_table('payment',
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='paymentstatus'), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('transaction_id', sa.String(), nullable=True),
    sa.Column('tax_year', sa.Integer(), nullable=False),
    sa.Column('late_fee', sa.Float(), nullable=False),
    sa.Column('has_traffic_lights_fee', sa.Boolean(), nullable=False),
    sa.Column('penalties', sa.Float(), nullable=False),
    sa.Column('tax_period_id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(), nullable=True),
    sa.Column('correction_of_payment_id', sa.Integer(), nullable=True),
    sa.Column('bank', sa.String(), nullable=True),
    sa.Column('process_status', sa.Enum('INITIATED', 'PENDING_PSE', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'EXPIRED', name='paymentprocessstatus'), nullable=False),
    sa.Column('process_message', sa.String(), nullable=True),
    sa.Column('bank_reference', sa.String(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('late_payment_fee', sa.Float(), nullable=False),
    sa.Column('correction_fee', sa.Float(), nullable=False),
    sa.Column('pse_transaction_id', sa.String(), nullable=True),
    sa.Column('email_notification_sent', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['correction_of_payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['tax_period_id'], ['taxperiod.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number'),
    sa.UniqueConstraint('transaction_id'),
    sa.UniqueConstraint('vehicle_id', 'tax_period_id', name='uq_vehicle_tax_period')
    )
    op.create_index('idx_payment_status_date', 'payment', ['status', 'payment_date'], unique=False)
    op.create_index('idx_payment_vehicle_year', 'payment', ['vehicle_id', 'tax_year'], unique=False)
    op.create_table('paymentstatuslog',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('INITIATED', 'PENDING_PSE', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'EXPIRED', name='paymentprocessstatus'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('change_reason', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_payment_status_log_timestamp', 'paymentstatuslog', ['payment_id', 'timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_payment_status_log_timestamp', table_name='paymentstatuslog')
    op.drop_table('paymentstatuslog')
    op.drop_index('idx_payment_vehicle_year', table_name='payment')
    op.drop_index('idx_payment_status_date', table_name='payment')
    op.drop_table('payment')
    op.drop_index(op.f('ix_vehicle_plate'), table_name='vehicle')
    op.drop_index('idx_vehicle_type_city', table_name='vehicle')
    op.drop_index('idx_vehicle_plate_status', table_name='vehicle')
    op.drop_table('vehicle')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index('idx_user_email_active', table_name='user')
    op.drop_index('idx_user_document', table_name='user')
    op.drop_table('user')
    op.drop_index('idx_tax_rate_vehicle_type_year', table_name='taxrate')
    op.drop_table('taxrate')
    op.drop_index(op.f('ix_taxperiod_year'), table_name='taxperiod')
    op.drop_index('idx_tax_period_dates', table_name='taxperiod')
    op.drop_table('taxperiod')
    op.drop_index(op.f('ix_systemconfig_key'), table_name='systemconfig')
    op.drop_index('idx_system_config_key_active', table_name='systemconfig')
    op.drop_table('systemconfig')
    op.drop_index(op.f('ix_document_type_code'), table_name='document_type')
    op.drop_index('idx_document_type_code_active', table_name='document_type')
    op.drop_table('document_type')
    # ### end Alembic commands ###
